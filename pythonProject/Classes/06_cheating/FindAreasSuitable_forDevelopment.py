# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2024-03-01 14:00:00
"""
import os.path

import arcpy
Relative_Directory = r"C:\Peck_NRS528_PythonGIS\pythonProject\Classes\06_cheating\Step_1_data"
arcpy.env.workspace = Relative_Directory # we do this variable so that we can have relative workspace for any non-arcpy tool.

    # To allow overwriting outputs change overwriteOutput option to True.
arcpy.env.overwriteOutput = True
Roads = os.path.join(Relative_Directory, "RI_Roads.shp")
print(Roads)
Places = os.path.join(Relative_Directory, "Places.shp")
print(Places)
State_Boundary = os.path.join(Relative_Directory, "State_Boundary_1997.shp")
print(State_Boundary)

# Make temporary folder to put intermediate files into.
if not os.path.exists(os.path.join(Relative_Directory, "temporary_files")):
    os.mkdir((os.path.join(Relative_Directory, "temporary_files")))

    # Process: Buffer roads (Buffer) (analysis)
if not os.path.exists(os.path.join(Relative_Directory, "temporary_files", "RI_Roads_Buffer")):
    # Buffered_Roads = "RI_Roads_Buffer"
    arcpy.analysis.Buffer(in_features=Roads, out_feature_class=os.path.join(Relative_Directory, "temporary_files", "Buffered_Roads"), buffer_distance_or_field="10 Miles", dissolve_option="ALL")
    # Buffered_Roads_description = arcpy.Describe(Buffered_Roads).name
    print("RI_Roads are now buffered!")
else:
    print("RI_Roads_Buffer was already created.")

    # Process: Buffer places (Buffer) (analysis)
if not os.path.exists(os.path.join(Relative_Directory, "temporary_files", "Places_Buffer")):
# Buffered_Places = "Places_Buffer"
    arcpy.analysis.Buffer(in_features=Places, out_feature_class=os.path.join(Relative_Directory, "temporary_files", "Places_Buffer"), buffer_distance_or_field="10 Miles", dissolve_option="ALL")

    # Process: Buffered data intersected (Intersect) (analysis)
if not os.path.exists(os.path.join(Relative_Directory, "temporary_files", "RI_Roads_Buffer")):
# Buffered_data_intersected_output = "RI_Roads_Buffer_Intersect"
    arcpy.analysis.Intersect(in_features=[[Buffered_Roads, ""], [Buffered_Places, ""]], out_feature_class=os.path.join(Relative_Directory, "temporary_files", "intersected"))

    # Process: Clip (Clip) (analysis)
if not os.path.exists(os.path.join(Relative_Directory, "temporary_files", "RI_Roads_Buffer")):
# Suitable_Areas_for_Development = "State_Boundary_1997_Clip"
arcpy.analysis.Clip(in_features=Buffered_data_intersected_output, clip_features=State_Boundary, out_feature_class=Suitable_Areas_for_Development)